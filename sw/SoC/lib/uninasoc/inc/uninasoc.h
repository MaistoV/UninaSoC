#ifndef UNINASOC_H
#define UNINASOC_H

#include "stdlib.h"

// This header is autogenerated based on project configuration
#include "uninasoc_conf.h"

#include "irq_handlers.h"
#include "plic.h"

#ifdef GPIO_IN_IS_ENABLED
#include "xlnx_gpio_in.h"
#endif

#ifdef GPIO_OUT_IS_ENABLED
#include "xlnx_gpio_out.h"
#endif

#ifdef TIM_IS_ENABLED
#include "xlnx_tim.h"
#endif

#include "tinyIO.h"

enum{
    UNINASOC_OK,
    UNINASOC_ERROR
};

static inline void uninasoc_init()
{
    extern const volatile uint32_t _peripheral_UART_start;
    // TinyIO init
    uint32_t uart_base_address = (uint32_t)&_peripheral_UART_start;
    tinyIO_init(uart_base_address);
}

#endif
